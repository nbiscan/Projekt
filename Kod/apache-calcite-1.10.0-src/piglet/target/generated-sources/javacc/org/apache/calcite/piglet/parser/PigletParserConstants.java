/* Generated By:JavaCC: Do not edit this line. PigletParserConstants.java */
package org.apache.calcite.piglet.parser;

public interface PigletParserConstants {

  int EOF = 0;
  int ALL = 1;
  int AND = 2;
  int ASC = 3;
  int AS = 4;
  int BAG = 5;
  int BY = 6;
  int DESC = 7;
  int DESCRIBE = 8;
  int DISTINCT = 9;
  int DUMP = 10;
  int FALSE = 11;
  int FILTER = 12;
  int FOREACH = 13;
  int GENERATE = 14;
  int GROUP = 15;
  int LOAD = 16;
  int LIMIT = 17;
  int MAP = 18;
  int NOT = 19;
  int ORDER = 20;
  int OR = 21;
  int TRUE = 22;
  int TUPLE = 23;
  int VALUES = 24;
  int UNSIGNED_INTEGER_LITERAL = 25;
  int FLOAT_LITERAL = 26;
  int APPROX_NUMERIC_LITERAL = 27;
  int DECIMAL_NUMERIC_LITERAL = 28;
  int EXPONENT = 29;
  int HEXDIGIT = 30;
  int WHITESPACE = 31;
  int BINARY_STRING_LITERAL = 32;
  int QUOTED_STRING = 33;
  int PREFIXED_STRING_LITERAL = 34;
  int UNICODE_STRING_LITERAL = 35;
  int CHARSETNAME = 36;
  int UNICODE_QUOTED_ESCAPE_CHAR = 37;
  int LPAREN = 38;
  int RPAREN = 39;
  int LBRACE = 40;
  int RBRACE = 41;
  int LBRACKET = 42;
  int RBRACKET = 43;
  int SEMICOLON = 44;
  int DOT = 45;
  int COMMA = 46;
  int EQ = 47;
  int EQEQ = 48;
  int GT = 49;
  int LT = 50;
  int HOOK = 51;
  int COLON = 52;
  int LE = 53;
  int GE = 54;
  int NE = 55;
  int PLUS = 56;
  int MINUS = 57;
  int STAR = 58;
  int SLASH = 59;
  int CONCAT = 60;
  int DOUBLE_PERIOD = 61;
  int QUOTE = 62;
  int DOUBLE_QUOTE = 63;
  int SINGLE_LINE_COMMENT = 73;
  int FORMAL_COMMENT = 74;
  int MULTI_LINE_COMMENT = 75;
  int BRACKET_QUOTED_IDENTIFIER = 77;
  int QUOTED_IDENTIFIER = 78;
  int BACK_QUOTED_IDENTIFIER = 79;
  int COLLATION_ID = 80;
  int IDENTIFIER = 81;
  int UNICODE_QUOTED_IDENTIFIER = 82;
  int LETTER = 83;
  int DIGIT = 84;

  int DEFAULT = 0;
  int DQID = 1;
  int BTID = 2;
  int IN_SINGLE_LINE_COMMENT = 3;
  int IN_FORMAL_COMMENT = 4;
  int IN_MULTI_LINE_COMMENT = 5;

  String[] tokenImage = {
    "<EOF>",
    "\"ALL\"",
    "\"AND\"",
    "\"ASC\"",
    "\"AS\"",
    "\"BAG\"",
    "\"BY\"",
    "\"DESC\"",
    "\"DESCRIBE\"",
    "\"DISTINCT\"",
    "\"DUMP\"",
    "\"FALSE\"",
    "\"FILTER\"",
    "\"FOREACH\"",
    "\"GENERATE\"",
    "\"GROUP\"",
    "\"LOAD\"",
    "\"LIMIT\"",
    "\"MAP\"",
    "\"NOT\"",
    "\"ORDER\"",
    "\"OR\"",
    "\"TRUE\"",
    "\"TUPLE\"",
    "\"VALUES\"",
    "<UNSIGNED_INTEGER_LITERAL>",
    "<FLOAT_LITERAL>",
    "<APPROX_NUMERIC_LITERAL>",
    "<DECIMAL_NUMERIC_LITERAL>",
    "<EXPONENT>",
    "<HEXDIGIT>",
    "<WHITESPACE>",
    "<BINARY_STRING_LITERAL>",
    "<QUOTED_STRING>",
    "<PREFIXED_STRING_LITERAL>",
    "<UNICODE_STRING_LITERAL>",
    "<CHARSETNAME>",
    "<UNICODE_QUOTED_ESCAPE_CHAR>",
    "\"(\"",
    "\")\"",
    "\"{\"",
    "\"}\"",
    "\"[\"",
    "\"]\"",
    "\";\"",
    "\".\"",
    "\",\"",
    "\"=\"",
    "\"==\"",
    "\">\"",
    "\"<\"",
    "\"?\"",
    "\":\"",
    "\"<=\"",
    "\">=\"",
    "\"!=\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"||\"",
    "\"..\"",
    "\"\\\'\"",
    "\"\\\"\"",
    "\" \"",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\"\\f\"",
    "<token of kind 69>",
    "\"//\"",
    "\"--\"",
    "\"/*\"",
    "<SINGLE_LINE_COMMENT>",
    "\"*/\"",
    "\"*/\"",
    "<token of kind 76>",
    "<BRACKET_QUOTED_IDENTIFIER>",
    "<QUOTED_IDENTIFIER>",
    "<BACK_QUOTED_IDENTIFIER>",
    "<COLLATION_ID>",
    "<IDENTIFIER>",
    "<UNICODE_QUOTED_IDENTIFIER>",
    "<LETTER>",
    "<DIGIT>",
  };

}
