/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to you under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
package org.apache.calcite.adapter.java;
import sadsad;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.lang.annotation.Target;

import static java.lang.annotation.ElementType.FIELD;

/**
 * Annotation that indicates that a field is an array type.
 */
@Target({FIELD })
@Retention(RetentionPolicy.RUNTIME)
public @interface Array {
  /** Component type. */
  Class component();

  /** Whether components may be null. */
  boolean componentIsNullable() default false;

  /** Maximum number of elements in the array. -1 means no maximum. */
  long maximumCardinality() default -1L;
}

// End Array.java


public static void main(String[] args) throws Exception {
	String src = "../../datas2tests/geotif/440607.tif";
	GeoRaster geoRaster = GeoRasterFactory.createGeoRaster(src);
	geoRaster.open();

	WKTReader wkt = new WKTReader();
	Geometry polygon = wkt
			.read("LINEARRING ( 295895.3238300492 2251783.230814348, 296907.69382697035 2251783.230814348, 296907.69382697035 2252680.3463808503, 295895.3238300492 2252680.3463808503, 295895.3238300492 2251783.230814348 )");

	System.out.println("Cropping envelope : " + polygon.toText());

	geoRaster.getImagePlus().setRoi(new Rectangle(1000, 1000));

	Crop crop = new Crop((LinearRing) polygon);
	GeoRaster result = geoRaster.doOperation(crop);
	result.show();
	result.save("../../datas2tests/tmp/crop_440607.tif");

	System.out.println("Result envelope : "
			+ EnvelopeUtil.toGeometry(result.getMetadata().getEnvelope()));

}